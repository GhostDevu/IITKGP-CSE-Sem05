$date
	Wed Aug 14 21:43:31 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module CLA_4_bit_tb $end
$var wire 4 ! s [3:0] $end
$var wire 1 " cout $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$var reg 1 % cin $end
$scope module uut $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 % cin $end
$var wire 4 ( s [3:0] $end
$var wire 1 " cout $end
$var wire 4 ) P [3:0] $end
$var wire 4 * G [3:0] $end
$var wire 4 + C [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
0%
b0 $
b0 #
0"
b0 !
$end
#100000
b1 +
b110 !
b110 (
b1 *
b100 )
b1 $
b1 '
b101 #
b101 &
#200000
b11 +
b10 *
b1 )
b110 !
b110 (
1%
b10 $
b10 '
b11 #
b11 &
#300000
b11 +
b1 *
b1010 )
b1100 !
b1100 (
0%
b1 $
b1 '
b1011 #
b1011 &
#400000
0"
b0 +
b1111 !
b1111 (
b0 *
b1111 )
b11 $
b11 '
b1100 #
b1100 &
#500000
1"
b1111 +
b0 !
b0 (
b1 *
b1110 )
b1 $
b1 '
b1111 #
b1111 &
#600000
b1000 +
b111 !
b111 (
b1000 *
b111 )
b1100 $
b1100 '
b1011 #
b1011 &
#700000
